"""
logging_middleware.py

Middleware for logging incoming requests and outgoing responses in FastAPI applications.
"""

from fastapi import Request, Response
from starlette.middleware.base import BaseHTTPMiddleware
import logging
import time

# Configure the logger
logger = logging.getLogger("request_logger")
logger.setLevel(logging.INFO)
handler = logging.StreamHandler()
formatter = logging.Formatter("%(asctime)s - %(levelname)s - %(message)s")
handler.setFormatter(formatter)
logger.addHandler(handler)


class LoggingMiddleware(BaseHTTPMiddleware):
    """
    Middleware to log incoming HTTP requests and outgoing responses.
    """

    async def dispatch(self, request: Request, call_next):
        """
        Log the request details, process the request, and log the response details.

        Args:
            request (Request): The incoming HTTP request.
            call_next (callable): The next middleware or endpoint to handle the request.

        Returns:
            Response: The HTTP response generated by the next handler.
        """
        # Log the incoming request details
        start_time = time.time()
        logger.info(f"Incoming request: {request.method} {request.url}")
        logger.info(f"Headers: {dict(request.headers)}")

        # Process the request
        try:
            response = await call_next(request)
        except Exception as e:
            logger.error(f"Error during request processing: {str(e)}", exc_info=True)
            raise

        # Log the outgoing response details
        process_time = time.time() - start_time
        logger.info(f"Outgoing response: {response.status_code} - Process time: {process_time:.2f} seconds")
        logger.info(f"Response headers: {dict(response.headers)}")
        return response


# Example usage in a FastAPI application
if __name__ == "__main__":
    from fastapi import FastAPI

    app = FastAPI()

    # Add the logging middleware
    app.add_middleware(LoggingMiddleware)

    @app.get("/")
    async def root():
        return {"message": "Welcome to the Logging Middleware Test API"}

    # Run the application using Uvicorn
    import uvicorn

    uvicorn.run(app, host="127.0.0.1", port=8000)
